buildscript {
    ext.kotlin_version = '1.3.72'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'org.jglrxavpok.kameboy'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin'

java {
    disableAutoTargetJvm()
}

repositories {
    mavenCentral()
    maven { url 'https://libraries.minecraft.net' }
    maven { url 'https://jitpack.io' } // to access packages from GitHub
}

project.ext.lwjglVersion = "3.2.3"


switch (org.gradle.internal.os.OperatingSystem.current()) {
    case org.gradle.internal.os.OperatingSystem.LINUX:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                : "natives-linux"
        break
    case org.gradle.internal.os.OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
    case org.gradle.internal.os.OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = System.getProperty("os.arch").contains("64") ? "natives-windows" : "natives-windows-x86"
        break
}

dependencies {
    // LWJGL
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-jemalloc"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"

    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengles::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-jemalloc::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"

    compile group: 'io.netty', name: 'netty-all', version: '4.1.24.Final'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "com.github.Minestom:Minestom:${project.minestom_version}" // declare Minestom as dependency
    implementation "com.github.Minestom:Minestom:${project.minestom_version}:lwjgl" // declare Minestom LWJGL code as dependency

    // declare use of Minestom LWJGL-related code (parentheses are required here for the build script to be parsed correctly)
    implementation("com.github.Minestom:Minestom:${project.minestom_version}") {
        capabilities {
            requireCapability("net.minestom.server:Minestom-lwjgl")
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}